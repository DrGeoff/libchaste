// CamIO 2: array_define_template.h
// Copyright (C) 2013: Matthew P. Grosvenor (matthew.grosvenor@cl.cam.ac.uk) 
// Licensed under BSD 3 Clause, please see LICENSE for more details. 

#ifndef ARRAY_DEFINE_TEMPLATE_H_
#define ARRAY_DEFINE_TEMPLATE_H_

#include "../types/types.h"


#define TYPE int;

/*Return the max number number of elements in the array*/
ch_word(*size)(ch_array_int_t* this);
ch_word(*count)(ch_array_int_t* this);  /*Return the actual number of elements in the array*/
ch_word(*resize)(ch_array_int_t* this, ch_word new_size); /*Resize the array*/

TYPE*(*off)(ch_array_int_t* this, u64 idx); /*Return the element at a given offset, with bounds checking*/

ch_array_int_iter_t*(*iter_at)(ch_array_int_t* this, ch_word idx); /*Return an iterator at the given index*/

ch_array_int_iter_t*(*find)(ch_array_int_t* this, TYPE value); /*find the given value using the comparitor function*/
void(*sort)(ch_array_int_t* this); /*sort into order given the comparitor function*/
void(*sort_reverse)(ch_array_int_t* this); /*sort into reverse order given the comparitor function*/

ch_array_int_iter_t*(*push_front)(ch_array_int_t* this, TYPE value); /* Put an element at the front of the array values, [WARN: In general this is very expensive for an array] */
ch_array_int_iter_t*(*push_back)(ch_array_int_t* this, TYPE value); /* Put an elemenet at the back of the arary values*/
ch_array_int_iter_t*(*insert_after)(ch_array_int_t* this, ch_array_int_iter_t* iter, TYPE value); /* Insert an element after the element given by iter*/
ch_array_int_iter_t*(*insert_before)(ch_array_int_t* this, ch_array_int_iter_t* iter, TYPE value); /* Insert an element befer the element giver by iter [WARN: In general this is very expensive for an array] */
ch_array_int_iter_t*(*assign)(ch_array_int_t* this, ch_array_int_iter_t* iter, TYPE value); /*Set the given iter to the given value */
ch_array_int_iter_t*(remove)(ch_array_int_t* this, ch_array_int_iter_t* iter); /*Remove the given iter [WARN: In general this is very expensive] */

 /* Members prefixed with "_" are nominally "private" */
ch_word (*_cmp)(TYPE lhs, TYPE rhs); /* Comparator function for find and sort operations */
TYPE* _array_backing; /*Actual array storage*/
ch_word _array_backing_size; /*Number of elements allocated in the given array*/
ch_word _array_backing_count; /*NUmber of elements currently in the array*/


ch_array_int_t* ch_array_int_new(ch_word size, TYPE init_value, ch_word(*cmp)(TYPE lhs, TYPE rhs) );




#endif /* ARRAY_DEFINE_TEMPLATE_H_ */
